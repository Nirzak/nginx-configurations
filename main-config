# cache handling using RAM
proxy_cache_path  /dev/shm levels=1:2 keys_zone=my_cache:10m inactive=10d max_size=3g;

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name my_first_subdomain;
  server_tokens off;

  location /.well-known {
    alias /srv/.well-known;
    allow all;
    default_type "text/plain";
    autoindex    on;
  }

# redirection handling for http requests
  location / {
    return 301 https://$host$request_uri;
  }
}

# SSL configuration
server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;
  server_name sub_domain;
  ssl_certificate /etc/nginx/ssl/zakvm.nirzak.tech/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/zakvm.nirzak.tech/key.pem;
  include snippets/ssl-params.conf;
  client_max_body_size 40M;
  server_tokens off;
  root /srv/;

  include /etc/nginx/apps/*.conf;

  location ~ /\.ht {
    deny all;
  }

  # added for health check
  location = /health {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"UP"}';
    }
}

server {
  listen 80;
  listen [::]:80;
  server_name another_sudomain;

  location / {
    proxy_pass http://127.0.0.1:5244;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Range $http_range;
    proxy_set_header If-Range $http_if_range;
    proxy_redirect off;
    # the max size of file to upload
    client_max_body_size 20000m;
}
  }